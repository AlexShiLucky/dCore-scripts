#!/bb/ash
# From concepts of deb2tcz by Jason Williams
# Enhanced for Arm ports by Robert Shingledecker
# postinst / TC customization script support by Brian Smith
# Create sce by merging Debian package together with dependencies
# Usage: $ debExtract packagename.deb

. /etc/init.d/tc-functions

#PATH="/bb:/bin:/sbin:/usr/bin:/usr/sbin"
#export PATH

checkroot
BUILD=`getBuild`
TCEDIR=/etc/sysconfig/tcedir
IMPORT="$TCEDIR"/import
HERE=`pwd`
PKGDIR=/tmp
PKG="$HERE"
CFG="$PKG"/cfg
FILE="$1"
BASENAME="${FILE%%_*}"
BASENAME="${BASENAME##/*/}"
DEBS="$TCEDIR"/import/debs

setupStartupScript() {
	[ -d "$PKG"/usr/local/tce.installed ] || mkdir -p "$PKG/usr/local/tce.installed/"
	chmod 775 "$PKG/usr/local/tce.installed/"
	chown root.staff "$PKG/usr/local/tce.installed/"
}

[ -z "$1" ] && echo "You must specify a file."
if [ "${FILE##*.}" != "deb" ] ; then
	echo "Only Debian packages work with this." 
	exit 1
fi

mkdir -p "$CFG"
DATA_TAR=`ar t "$FILE" data.tar.*`
CONFIG_TAR=`ar t "$FILE" control.tar.*`
ar p "$FILE" "$DATA_TAR" > "$PKGDIR"/"$DATA_TAR" || exit 1
ar p "$FILE" "$CONFIG_TAR" > "$PKGDIR"/"$CONFIG_TAR" || exit 1
tar xf "$PKGDIR"/"$DATA_TAR" -C "$PKG" || exit 1
tar xf "$PKGDIR"/"$CONFIG_TAR" -C "$CFG" || exit 1
	
# Set Tiny Core custom script support.
#cd "$PKG"
read IMPORTMIRROR < /opt/tcemirror                                                                             
IMPORTMIRROR="${IMPORTMIRROR%/}/$(getMajorVer).x/import"   
		
cd /tmp
if sudo tar xzf /tmp/deb2sce.tar.gz "${BASENAME}".deb2sce > /dev/null 2>&1
then
	echo Merging Tiny Core custom start script for ${BASENAME}: "${BASENAME}.deb2sce"
	setupStartupScript
	cat /tmp/"${BASENAME}.deb2sce" > "$PKG/usr/local/tce.installed/${BASENAME}"
	chmod -R 775 "$PKG/usr/local/tce.installed/"
	chown -R root.staff "$PKG/usr/local/tce.installed/"
	sudo rm /tmp/"${BASENAME}.deb2sce"
fi
cd "$HERE"

if grep "^${BASENAME}-data.tar.gz" /tmp/.pkgextrafiles >/dev/null; then
cd "$DEBS"
  if [ -f "${BASENAME}"-data.tar.gz  ]; then
	[ -f "${BASENAME}"-data.tar.gz.md5.txt ] && rm "${BASENAME}"-data.tar.gz.md5.txt
	wget -O "${BASENAME}"-data.tar.gz.md5.txt "$IMPORTMIRROR"/"${BASENAME}"-data.tar.gz.md5.txt > /dev/null 2>&1 || exit 1

	if ! md5sum -c "${BASENAME}"-data.tar.gz.md5.txt > /dev/null 2>&1; then
        	echo "Fetching updated extra files for "${BASENAME}": "${BASENAME}"-data.tar.gz"
	    	rm "${BASENAME}"-data.tar.gz*
  		wget -O "${BASENAME}"-data.tar.gz -c "$IMPORTMIRROR"/"${BASENAME}"-data.tar.gz || exit 1
  		wget -O "${BASENAME}"-data.tar.gz.md5.txt -c "$IMPORTMIRROR"/"${BASENAME}"-data.tar.gz.md5.txt 	|| exit 1
  	fi

  else
	[ -f "$DEBS"/"${BASENAME}"-data.tar.gz ] && rm "$DEBS"/"${BASENAME}"-data.tar.gz
	[ -f "$DEBS"/"${BASENAME}"-data.tar.gz.md5.txt ] && rm "$DEBS"/"${BASENAME}"-data.tar.gz.md5.txt
	wget -O "$DEBS"/"${BASENAME}"-data.tar.gz -c "$IMPORTMIRROR"/"${BASENAME}"-data.tar.gz || exit 1
  	wget -O "$DEBS"/"${BASENAME}"-data.tar.gz.md5.txt -c "$IMPORTMIRROR"/"${BASENAME}"-data.tar.gz.md5.txt || exit 1
  fi

  if md5sum -c "${BASENAME}"-data.tar.gz.md5.txt >/dev/null
  then
    echo "Merging extra files for "${BASENAME}": "${BASENAME}-data".tar.gz"
    tar xf "${BASENAME}-data.tar.gz" -C "$PKG" || exit 1
  else
    echo "Md5sum failed for "${BASENAME}"-data.tar.gz, exiting..."
    exit 1
  fi
  cd "$PKG"
fi

	
# Setup Debian postinst script.
cd "$PKG"
#find . -type d -empty | xargs rmdir > /dev/null 2>&1
#busybox find . -mindepth 1 -depth -type d -exec rmdir '{}' + 2>/dev/null

if [ -f "$CFG"/postinst ]; then
	mkdir -p "$PKG/usr/local/postinst"
	cp "$CFG/postinst" "$PKG/usr/local/postinst/${BASENAME}"
#	SCRIPT='/usr/local/postinst/'${BASENAME}' configure 2>/dev/null'
	SCRIPT='/usr/local/postinst/'${BASENAME}' configure'
	setupStartupScript
	echo "${SCRIPT}" >> "$PKG/usr/local/tce.installed/${BASENAME}"
	chmod 775 "$PKG/usr/local/tce.installed/${BASENAME}"
	chown -R root.staff "$PKG/usr/local/tce.installed/"
fi

#	cd pkg
echo "Merging $BASENAME "
#find . -depth | cpio -pmd "$PKG" 2>&1 > /dev/null
#(tar -cf - .) | (cd "$PKG" && tar -xpf -)
if [ "$?" != "0" ]; then
	exit 1
fi	
rm -r "$CFG"
