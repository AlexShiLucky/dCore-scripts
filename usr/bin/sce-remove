#!/bin/busybox ash
# (c) Jason Williams 2013

. /etc/init.d/tc-functions

TCEDIR="/etc/sysconfig/tcedir"
SCEDIR=""$TCEDIR"/sce"
SCE=${SCE%%.sce}
cd "$SCEDIR"


[ -f /tmp/.keeplist ] && sudo rm /tmp/.keeplist
[ -f /tmp/.scermlist ] && sudo rm /tmp/.scermlist


if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
	echo " "
	echo "${YELLOW}sce-remove - remove SCE(s) upon shutdown or reboot, removing an SCE that other"
	echo "             SCE(s) depend on for shared dependencies will also flag these for"
	echo "             removal, SCE(s) flagged for removal are listed in /tmp/.removesce.${NORMAL}"
	echo " "
	echo "Usage:"
	echo " "
	echo "${YELLOW}'"sce-remove"'${NORMAL}          select SCE(s) for removal from list."
	echo "${YELLOW}'"sce-remove SCE"'${NORMAL}      mark SCE and any SCE(s) that depend on it for removal."
	echo "${YELLOW}'"sce-remove -k"'${NORMAL}       select SCE(s) for removal from list, keep .lst and .dep"
        echo "                      files, which are useful for future imports."
	echo "${YELLOW}'"sce-remove -k SCE"'${NORMAL}   mark SCE and any SCE(s) that depend on it for removal,"
        echo "                      keep .lst and .dep files, which are useful for future"
	echo "                      imports."
	echo " "
exit 1
fi

while getopts k OPTION
do
	case ${OPTION} in
		k) KEEPLIST=TRUE ;;
		*) echo "Run  sce-remove --help  for usage information."
		   exit 1 ;;
	esac
done
shift `expr $OPTIND - 1`
SCE="$1"

if grep -i "^KEEPLIST=TRUE" /etc/sysconfig/sceconfig > /dev/null 2>&1; then
	touch /tmp/.keeplist
elif [ "$KEEPLIST" == "TRUE" ]; then
	touch /tmp/.keeplist
fi

if [ -z "$SCE" ]; then
	## Select sces to remove on shutdown.
	cd "$SCEDIR"
	ls *.sce | sed 's:.sce$::' | sort > /tmp/.scermlist
	while true; do
		[ ! -s /tmp/.scermlist ] && break
		cat /tmp/.scermlist | select2 "Choose SCE(s) to remove on shutdown, press Enter without selection to proceed." "-"
		read ANS < /tmp/select.ans
		if [ "$ANS" == "" ]; then
			break
		fi
		grep "^$ANS$" /tmp/.removesce > /dev/null 2>&1 || echo "$ANS" >> /tmp/.removesce
		sed -i "/^$ANS$/d" /tmp/.scermlist
	done
else
	cd "$SCEDIR"
	if [ -f "$SCE".sce ]; then
		echo "$SCE" > /tmp/.removesce
	else
		echo "'"$SCE".sce' does not exist, exiting.."
		exit 1
	fi
fi 

rmdep() {
if ls *.dep > /dev/null 2>&1; then
	for D in `grep "^$1$" *.dep`; do 
		EXT0=`echo "$D" | cut -f1 -d:`
		EXT=`basename "$EXT0" .sce.dep`
		grep "^$EXT$" /tmp/.removesce > /dev/null 2>&1 || echo "$EXT" >> /tmp/.removesce
		rmdep "$EXT"
	done
fi	
}
if [ -s /tmp/.removesce ]; then
	for I in `cat /tmp/.removesce`; do 
		ondemand -r "$I"
		rmdep "$I"	
	done
	echo " "
	for I in `cat /tmp/.removesce`; do
		echo "$I"
	done
	echo " "
	echo "The above SCE(s) will be removed upon shutdown or reboot."
else
	echo " "
	echo "No SCE(s) selected for removal, exiting.."
fi
