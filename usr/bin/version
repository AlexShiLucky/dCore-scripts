#!/bb/ash
. /etc/init.d/tc-functions
BUILD=`getBuild`

PATH="/bb:/bin:/sbin:/usr/bin:/usr/sbin"
export PATH
PORT="$(cat /usr/share/doc/tc/release.txt | cut -f1 -d:)"
VERSION="$(cat /usr/share/doc/tc/release.txt | cut -f2 -d:)"
RESULTS="$PORT:$VERSION"

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
	echo
	echo "${YELLOW}version - confirm dCore version. check for release & release candidate updates.${NORMAL}"
	echo
	echo "Usage:"
	echo
	echo "${YELLOW}'"version"'${NORMAL}        print the running dCore name and version."
	echo "${YELLOW}'"version -c"'${NORMAL}     check if running the latest release."
	echo "${YELLOW}'"version -r"'${NORMAL}     check if running the latest release candidate (RC)."
	echo "${YELLOW}'"version -l"'${NORMAL}     list running dCore name and version."
	echo "${YELLOW}'"version -s"'${NORMAL}     see dCore version."
	echo
exit 1
fi


while getopts rcls OPTION
do
  case ${OPTION} in
    r) LATEST=`wget -q -O - $(cat /opt/tcemirror)/dCore/"$BUILD"/release_candidates/"$PORT"/"$PORT".latest 2>/dev/null`
       if [ "$?" == 0 ]; then
       		RUNNING="${RESULTS##*:}"
       		if [ "$LATEST" != "$RESULTS" ]; then
       			echo "Warning:"
       			echo "You are running:                    "$RESULTS""
       			echo "The latest release candidate is:    $LATEST"
                        echo
                        echo -n "To download latest release candidate press (y)es, to exit press (q)uit: "
                        read TARGET
                        echo
                        if [ $TARGET = Y ] || [ $TARGET = y ]; then
                        rm -rf /tmp/release_candidate
                        mkdir -p /tmp/release_candidate
                        cd /tmp/release_candidate
                        wget -c $(cat /opt/tcemirror)/dCore/"$BUILD"/release_candidates/"$PORT"/"$PORT".gz
                        echo
                        echo "Downloaded:   /tmp/release_candidate/"$PORT".gz."
                        echo
                        echo "Manually copy /tmp/release_candidate/"$PORT".gz to boot directory,"
                        echo "recommend backing up old version, reboot to complete uprade."
                        sleep 3
                        echo
                          else
		            exit
 	                  fi                       
		else
			echo "You are running "$RESULTS", the latest release candidate."
       		fi
       fi
       exit
       ;;
    c) LATEST=`wget -q -O - $(cat /opt/tcemirror)/dCore/"$BUILD"/release/"$PORT"/"$PORT".latest 2>/dev/null`
       if [ "$?" == 0 ]; then
       		RUNNING="${RESULTS##*:}"
       		if [ "$LATEST" != "$RESULTS" ]; then
       			echo "Warning:"
       			echo "You are running:          "$RESULTS""
       			echo "The latest release is:    $LATEST"
                        echo
                        echo "To download latest release press (y)es, to exit press (q)uit. To check for"
                        echo -n "the latest release candidate instead, exit and run 'version -r': "
                        read TARGET
                        echo
                        if [ $TARGET = Y ] || [ $TARGET = y ]; then
                        rm -rf /tmp/release
                        mkdir -p /tmp/release
                        cd /tmp/release
                        wget -c $(cat /opt/tcemirror)/dCore/"$BUILD"/release/"$PORT"/"$PORT".gz
                        echo
                        echo "Downloaded:   /tmp/release/"$PORT".gz."
                        echo
                        echo "Manually copy /tmp/release/"$PORT".gz to boot directory, recommend"
                        echo "backing up old version, reboot to complete uprade."
                        sleep 3
                        echo
                          else
		            exit
 	                  fi
		else
			echo "You are running "$RESULTS", the latest release."
                fi
       fi
       exit
       ;;
    l) echo "$RESULTS"
        exit
        ;;
    s) echo "${RESULTS##*:}"
        exit
        ;;
    *) echo "Run  version --help  for usage information." ;;
  esac
done
echo "$RESULTS"
exit